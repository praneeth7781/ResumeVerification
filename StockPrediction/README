Link to slides: https://docs.google.com/presentation/d/1lbZwvNjDDBFfqDk19NUNFc_JMNJsUc7a7GNE1XPp9zU/edit#slide=id.g17503a96490_1_48


RECURRENT NEURAL NETWORKS:

    DATA:
        see the stocklist in dataloader.py, and if u run that file, all the datasets will be dowloaded in the DATA/ folder with
        plots to visualize. Also u can visualize correlation of feature heatmap when u run this file.


    I created 3 RNN models + 1simple NN models

    each of the files RNN.py, GRU.py, LSTM.py and NN.py:
        -->has a model defined
        -->a fucntion to train which is called in the main function.
        --> and a funtion prediction() to load model and predict Outputs given input.
        -->HYPERPARAMS can be adjusted, and then the model can be trained for various (T,N,H) pairs [WINDOW PRED HIDDEN]
        --> Then the loss of each epoch along with some plots of training are generated.
        
        --> To train on any stock [GOOG,MSFT, TSLA] etc.... (see all stock names in dataloader.py) and year
            python3 RNN.py GOOG 2007  ...... trains RNN model on GOOG stock from 2007 saves it as MODELS/RNN_GOOG_2007.pkl.
            python3 LSTM.py GOOG 2007  ...... trains RNN model on GOOG stock from 2007 saves it as MODELS/LSTM_GOOG_2007.pkl.
            etc etc....
            

            by default use 2007 always, else u need to download from diff year using dataloader, and then use that year.

        --> Each model also has a test file to that saved model. Usage:

            python3 RNNtest.py GOOG 2007 ALL <from-date> <to-date>
            python3 GRUtest.py GOOG 2007 TSLA <from-date> <to-date>  (u can give any stock name as 2nd input)
            python3 LSTMtest.py GOOG 2007    [tests on GOOG itself]
            

            the first arg specifies the trained stock,yr name. THEY MUST BE TRAINED BEFORE FOR USING.
            Then u can can test that model on any other stock or ALL stocks. the <> <> dates are optional, if not specified 2007-1-1 2022-11-1 are defaulted.

            if u leave out the 3rd argument, then it defaultly tests the trained stock on same stock data as the test-data.


    u can do the same for RNN, LSTM, GRU, NN same syntax.
    
    --> if u wish to supress graphs, just comment them out and run the files.
    
    
TRANSFORMERS:

	Please refer to the Notebook submitted in the TRANSFORMERS FOLDER.

	We tried a lot, but we made it a bit complex and at the end our model is showing good training results, but was unable to perform well on test sets.
	And we couldn't debug. Definitely some small bug.
	
Gaussian Process:
	It is an incomplete implementation, what we were trying to do is explained in the report.
	
	
